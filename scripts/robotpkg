#!/bin/sh

# first check if openrobots directory exist in this computer
if [ ! -d $HOME/openrobots ] ; then
    echo -e "\e[0;31m$1\e[0m" 'openrobots directory does not exist under ${HOME}'
    return
fi
export OPENROBOTS_BASE=$HOME/openrobots

if [[ $1 == 'devel' ]]; then
    # now check if openrobots/devel directory exist in this computer
    if [ ! -d $OPENROBOTS_BASE/devel ] ; then
        echo -e "\e[0;31m$1\e[0m" 'devel directory does not exist under ${OPENROBOTS_BASE}'
        return
    else
        export OPENROBOTS_DEVEL=$OPENROBOTS_BASE/devel
    fi
    # now check if openrobots/install directory exist in this computer
    if [ ! -d $OPENROBOTS_BASE/install ] ; then
        echo -e "\e[0;31m$1\e[0m" 'install directory does not exist under ${OPENROBOTS_BASE}'
        return
    else
        export OPENROBOTS_INSTALL=$OPENROBOTS_BASE/install
    fi
elif [[ $1 == 'install' ]]; then
    # check if openrobots/install directory exist in this computer
    if [ ! -d $OPENROBOTS_BASE/install ] ; then
        echo -e "\e[0;31m$1\e[0m" 'install directory does not exist under ${OPENROBOTS_BASE}'
        return
    else
        export OPENROBOTS_INSTALL=$OPENROBOTS_BASE/install
    fi
fi

if [ OPENROBOTS_DEVEL ]; then
    # setting openrobots/devel related variables
    if [ -d $OPENROBOTS_DEVEL/lib/pkgconfig ] ; then
        export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$OPENROBOTS_DEVEL/lib/pkgconfig ; fi
    if [ -d $OPENROBOTS_DEVEL/bin ] ; then
        export PATH=$PATH:$OPENROBOTS_DEVEL/bin ; fi
    if [ -d $OPENROBOTS_DEVEL/sbin ] ; then
        export PATH=$PATH:${OPENROBOTS_DEVEL}/sbin ; fi
    if [ -d $OPENROBOTS_DEVEL/lib ] ; then
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$OPENROBOTS_DEVEL/lib ; fi
    if [ -d $OPENROBOTS_DEVEL/lib/openprs ] ; then
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$OPENROBOTS_DEVEL/lib/openprs ; fi
    if [ -d $OPENROBOTS_DEVEL/lib/python2.7/site-packages ] ; then
        export PYTHONPATH=$PYTHONPATH:$OPENROBOTS_DEVEL/lib/python2.7/site-packages ; fi
    if [ -d $OPENROBOTS_DEVEL/share ] ; then
        export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$OPENROBOTS_DEVEL/share ; fi
    unset OPENROBOTS_DEVEL ;
fi

# setting openrobots/install related variables, in any event
if [ -d $OPENROBOTS_INSTALL/lib/pkgconfig ] ; then
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$OPENROBOTS_INSTALL/lib/pkgconfig ; fi
if [ -d $OPENROBOTS_INSTALL/bin ] ; then
    export PATH=$PATH:$OPENROBOTS_INSTALL/bin ; fi
if [ -d $OPENROBOTS_INSTALL/sbin ] ; then
    export PATH=$PATH:$OPENROBOTS_INSTALL/sbin ; fi
if [ -d $OPENROBOTS_INSTALL/lib ] ; then
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$OPENROBOTS_INSTALL/lib ; fi
if [ -d $OPENROBOTS_INSTALL/lib/openprs ] ; then
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$OPENROBOTS_INSTALL/lib/openprs ; fi
if [ -d $OPENROBOTS_INSTALL/lib/python2.7/site-packages ] ; then
    export PYTHONPATH=$PYTHONPATH:$OPENROBOTS_INSTALL/lib/python2.7/site-packages ; fi

# now setting ROBOTPKG_BASE, where robotpackage will install software
if [ -d $OPENROBOTS_INSTALL ] ; then
    export ROBOTPKG_BASE=$OPENROBOTS_INSTALL ; fi

# cleaning up
unset OPENROBOTS_INSTALL

# tcl
export TCLSERV_MODULE_PATH=$ROBOTPKG_BASE
export TCLSERV_PORT=1235
